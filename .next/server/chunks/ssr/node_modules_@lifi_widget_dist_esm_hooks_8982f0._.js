module.exports = {

"[project]/node_modules/@lifi/widget/dist/esm/hooks/useWidgetEvents.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useWidgetEvents": (()=>useWidgetEvents),
    "widgetEvents": (()=>widgetEvents)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mitt$2f$dist$2f$mitt$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/mitt/dist/mitt.mjs [app-ssr] (ecmascript)");
;
// https://github.com/developit/mitt/issues/191
const mitt = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mitt$2f$dist$2f$mitt$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"];
const widgetEvents = mitt();
const useWidgetEvents = ()=>{
    return widgetEvents;
}; //# sourceMappingURL=useWidgetEvents.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useAvailableChains.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useAvailableChains": (()=>useAvailableChains)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$types$2f$src$2f$_esm$2f$chains$2f$Chain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/types/src/_esm/chains/Chain.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/providers/WidgetProvider/WidgetProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$item$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/utils/item.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/services/api.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$config$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/config.js [app-ssr] (ecmascript)");
;
;
;
;
;
const supportedChainTypes = [
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$types$2f$src$2f$_esm$2f$chains$2f$Chain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ChainType"].EVM,
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$types$2f$src$2f$_esm$2f$chains$2f$Chain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ChainType"].SVM,
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$types$2f$src$2f$_esm$2f$chains$2f$Chain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ChainType"].UTXO
];
const useAvailableChains = (chainTypes)=>{
    const { chains } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetConfig"])();
    // const { providers } = useHasExternalWalletProvider();
    const { data, isLoading } = useQuery({
        queryKey: [
            'chains',
            // providers,
            chains?.types,
            chains?.allow,
            chains?.deny,
            chains?.from,
            chains?.to
        ],
        queryFn: async ({ queryKey: [, chainTypesConfig] })=>{
            const chainTypesRequest = supportedChainTypes// providers.length > 0 ? providers : supportedChainTypes
            .filter((chainType)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$item$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isItemAllowed"])(chainType, chainTypesConfig));
            const availableChains = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getChains"])({
                chainTypes: chainTypes || chainTypesRequest
            });
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$config$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["config"].setChains(availableChains);
            return availableChains;
        },
        refetchInterval: 300000,
        staleTime: 300000
    });
    const getChainById = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((chainId, chains = data)=>{
        if (!chainId) {
            return;
        }
        const chain = chains?.find((chain)=>chain.id === chainId);
        // if (!chain) {
        //   throw new Error('Chain not found or chainId is invalid.');
        // }
        return chain;
    }, [
        data
    ]);
    return {
        chains: data,
        getChainById,
        isLoading
    };
}; //# sourceMappingURL=useAvailableChains.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useChains.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useChains": (()=>useChains)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/providers/WidgetProvider/WidgetProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useAvailableChains.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$item$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/utils/item.js [app-ssr] (ecmascript)");
;
;
;
;
const useChains = (type, chainTypes)=>{
    const { chains } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetConfig"])();
    const { chains: availableChains, isLoading: isLoadingAvailableChains, getChainById } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAvailableChains"])();
    const filteredChains = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>{
        const filteredChains = type ? availableChains?.filter((chain)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$item$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isItemAllowed"])(chain.id, chains) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$item$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isItemAllowed"])(chain.id, chains?.[type]) && // Check against chain types if they are provided
            (chainTypes?.includes(chain.chainType) ?? true)) : availableChains?.filter((chain)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$item$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isItemAllowed"])(chain.id, chains));
        return filteredChains;
    }, [
        availableChains,
        chainTypes,
        chains,
        type
    ]);
    return {
        chains: filteredChains,
        getChainById,
        isLoading: isLoadingAvailableChains
    };
}; //# sourceMappingURL=useChains.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useAddressValidation.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AddressType": (()=>AddressType),
    "useAddressValidation": (()=>useAddressValidation)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$i18next$2f$dist$2f$es$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/react-i18next/dist/es/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$i18next$2f$dist$2f$es$2f$useTranslation$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-i18next/dist/es/useTranslation.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$chainType$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/utils/chainType.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$getNameServiceAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/services/getNameServiceAddress.js [app-ssr] (ecmascript)");
;
;
;
;
var AddressType;
(function(AddressType) {
    AddressType[AddressType["Address"] = 0] = "Address";
    AddressType[AddressType["NameService"] = 1] = "NameService";
})(AddressType || (AddressType = {}));
const useAddressValidation = ()=>{
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$i18next$2f$dist$2f$es$2f$useTranslation$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTranslation"])();
    const { mutateAsync: validateAddress, isPending: isValidating } = useMutation({
        mutationFn: async ({ value, chainType, chain })=>{
            try {
                if (!value) {
                    throw new Error();
                }
                const _chainType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$chainType$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getChainTypeFromAddress"])(value);
                if (_chainType) {
                    return {
                        address: value,
                        addressType: AddressType.Address,
                        chainType: _chainType,
                        isValid: true
                    };
                }
                const address = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$getNameServiceAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getNameServiceAddress"])(value, chainType);
                if (address) {
                    const _chainType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$chainType$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getChainTypeFromAddress"])(address);
                    if (_chainType) {
                        return {
                            address: address,
                            addressType: AddressType.NameService,
                            chainType: _chainType,
                            isValid: true
                        };
                    }
                }
                throw new Error();
            } catch (_) {
                return {
                    isValid: false,
                    error: t('error.title.walletAddressInvalid', chain?.name ? {
                        context: 'chain',
                        chainName: chain.name
                    } : undefined)
                };
            }
        }
    });
    return {
        validateAddress,
        isValidating
    };
}; //# sourceMappingURL=useAddressValidation.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useWideVariant.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useWideVariant": (()=>useWideVariant)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/providers/WidgetProvider/WidgetProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$useMediaQuery$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__useMediaQuery$3e$__ = __turbopack_import__("[project]/node_modules/@mui/material/useMediaQuery/index.js [app-ssr] (ecmascript) <export default as useMediaQuery>");
;
;
const defaultExpandableWidth = 852;
const useWideVariant = ()=>{
    const { variant, useRecommendedRoute } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetConfig"])();
    const expandableAllowed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$useMediaQuery$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__useMediaQuery$3e$__["useMediaQuery"])((theme)=>theme.breakpoints.up(defaultExpandableWidth));
    return variant === 'wide' && expandableAllowed && !useRecommendedRoute;
}; //# sourceMappingURL=useWideVariant.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useDefaultElementId.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useDefaultElementId": (()=>useDefaultElementId)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/providers/WidgetProvider/WidgetProvider.js [app-ssr] (ecmascript)");
;
const useDefaultElementId = ()=>{
    const { elementId } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetConfig"])();
    return elementId;
}; //# sourceMappingURL=useDefaultElementId.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useChain.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useChain": (()=>useChain)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useAvailableChains.js [app-ssr] (ecmascript)");
;
;
const useChain = (chainId)=>{
    const { isLoading, getChainById } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAvailableChains"])();
    const chain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>getChainById(chainId), [
        chainId,
        getChainById
    ]);
    return {
        chain,
        isLoading,
        getChainById
    };
}; //# sourceMappingURL=useChain.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useExplorer.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useExplorer": (()=>useExplorer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/providers/WidgetProvider/WidgetProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useAvailableChains.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$config$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/config/constants.js [app-ssr] (ecmascript)");
;
;
;
const sanitiseBaseUrl = (baseUrl)=>baseUrl.trim().replace(/\/+$/, '');
const useExplorer = ()=>{
    const { explorerUrls } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetConfig"])();
    const { getChainById } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAvailableChains"])();
    const getBaseUrl = (chain)=>{
        const baseUrl = explorerUrls?.[chain.id] ? explorerUrls[chain.id][0] : chain.metamask.blockExplorerUrls[0];
        return sanitiseBaseUrl(baseUrl);
    };
    const resolveChain = (chain)=>Number.isFinite(chain) ? getChainById(chain) : chain;
    const getTransactionLink = ({ txHash, txLink, chain })=>{
        if (!txHash && txLink) {
            return txLink;
        }
        if (!chain) {
            const baseUrl = explorerUrls?.internal?.[0] ? sanitiseBaseUrl(explorerUrls?.internal[0]) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$config$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lifiExplorerUrl"];
            return `${baseUrl}/tx/${txHash}`;
        }
        const resolvedChain = resolveChain(chain);
        return `${resolvedChain ? getBaseUrl(resolvedChain) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$config$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lifiExplorerUrl"]}/tx/${txHash}`;
    };
    const getAddressLink = (address, chain)=>{
        if (!chain) {
            const baseUrl = explorerUrls?.internal?.[0] ? sanitiseBaseUrl(explorerUrls?.internal[0]) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$config$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lifiExplorerUrl"];
            return `${baseUrl}/address/${address}`;
        }
        const resolvedChain = resolveChain(chain);
        return `${resolvedChain ? getBaseUrl(resolvedChain) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$config$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lifiExplorerUrl"]}/address/${address}`;
    };
    return {
        getTransactionLink,
        getAddressLink
    };
}; //# sourceMappingURL=useExplorer.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useNavigateBack.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useNavigateBack": (()=>useNavigateBack)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$router$2f$dist$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/react-router/dist/index.js [app-ssr] (ecmascript) <locals>");
;
;
const useNavigateBack = ()=>{
    const navigate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$router$2f$dist$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["useNavigate"])();
    const navigateBack = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(()=>{
        // TODO: find a better router with nested memory routers support
        // https://github.com/remix-run/react-router/pull/9112
        // https://github.com/remix-run/react-router/discussions/9601
        //
        // if (window.history.length > 2) {
        navigate(-1);
    // } else {
    //   navigate(
    //     window.location.pathname.substring(
    //       0,
    //       window.location.pathname.lastIndexOf('/'),
    //     ) || '/',
    //     { replace: true },
    //   );
    // }
    }, [
        navigate
    ]);
    return {
        navigateBack,
        navigate
    };
}; //# sourceMappingURL=useNavigateBack.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useTools.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useTools": (()=>useTools)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/providers/WidgetProvider/WidgetProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/services/api.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$item$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/utils/item.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettingsStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/settings/useSettingsStore.js [app-ssr] (ecmascript)");
;
;
;
;
;
const useTools = ()=>{
    const { bridges, exchanges } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetConfig"])();
    const { data } = useQuery({
        queryKey: [
            'tools',
            bridges?.allow,
            bridges?.deny,
            exchanges?.allow,
            exchanges?.deny
        ],
        queryFn: async ()=>{
            const tools = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getTools"])();
            const result = {
                bridges: tools.bridges.filter((bridge)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$item$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isItemAllowed"])(bridge.key, bridges)),
                exchanges: tools.exchanges.filter((exchange)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$item$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isItemAllowed"])(exchange.key, exchanges))
            };
            const { initializeTools } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettingsStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSettingsStore"].getState();
            initializeTools('Bridges', result.bridges.map((bridge)=>bridge.key));
            initializeTools('Exchanges', result.exchanges.map((exchange)=>exchange.key));
            return result;
        },
        refetchInterval: 180000,
        staleTime: 180000
    });
    return {
        tools: data
    };
}; //# sourceMappingURL=useTools.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useSettingMonitor.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useSettingMonitor": (()=>useSettingMonitor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettingsStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/settings/useSettingsStore.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$zustand$2f$esm$2f$vanilla$2f$shallow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/zustand/esm/vanilla/shallow.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTools$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useTools.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/providers/WidgetProvider/WidgetProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettingsActions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/settings/useSettingsActions.js [app-ssr] (ecmascript)");
;
;
;
;
;
const useSettingMonitor = ()=>{
    const [disabledBridges, disabledExchanges, routePriority, slippage, gasPrice] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettingsStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSettingsStore"])((state)=>[
            state.disabledBridges,
            state.disabledExchanges,
            state.routePriority,
            state.slippage,
            state.gasPrice
        ], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$zustand$2f$esm$2f$vanilla$2f$shallow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["shallow"]);
    const { tools } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTools$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTools"])();
    const config = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetConfig"])();
    const { setDefaultSettings, resetSettings } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettingsActions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSettingsActions"])();
    const isSlippageChanged = config.slippage ? Number(slippage) !== config.slippage * 100 : slippage !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettingsStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["defaultConfigurableSettings"].slippage;
    const isSlippageOutsideRecommendedLimits = isSlippageChanged && Number(slippage) > 1;
    const isRoutePriorityChanged = config.routePriority ? routePriority !== config.routePriority : routePriority !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettingsStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["defaultConfigurableSettings"].routePriority;
    const isGasPriceChanged = gasPrice !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettingsStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["defaultConfigurableSettings"].gasPrice;
    const isBridgesChanged = Boolean(disabledBridges.length);
    const isExchangesChanged = Boolean(disabledExchanges.length);
    const isCustomRouteSettings = isBridgesChanged || isExchangesChanged || isSlippageChanged || isRoutePriorityChanged || isGasPriceChanged;
    const isRouteSettingsWithWarnings = isSlippageOutsideRecommendedLimits;
    const reset = ()=>{
        if (tools) {
            resetSettings(tools.bridges.map((tool)=>tool.key), tools.exchanges.map((tool)=>tool.key));
            setDefaultSettings(config);
        }
    };
    return {
        isBridgesChanged,
        isExchangesChanged,
        isSlippageChanged,
        isSlippageOutsideRecommendedLimits,
        isRoutePriorityChanged,
        isGasPriceChanged,
        isCustomRouteSettings,
        isRouteSettingsWithWarnings,
        reset
    };
}; //# sourceMappingURL=useSettingMonitor.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useHeader.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useHeader": (()=>useHeader)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$header$2f$useHeaderStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/header/useHeaderStore.js [app-ssr] (ecmascript)");
;
;
function useHeader(title, action) {
    const { setTitle, setAction } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$header$2f$useHeaderStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useHeaderStore"])((state)=>state);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const removeTitle = setTitle(title);
        const removeAction = action ? setAction(action) : undefined;
        return ()=>{
            removeTitle();
            if (removeAction) {
                removeAction();
            }
        };
    }, [
        setTitle,
        setAction,
        action,
        title
    ]);
} //# sourceMappingURL=useHeader.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useRouteExecution.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useRouteExecution": (()=>useRouteExecution)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/wallet-management/dist/esm/hooks/useAccount.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useWidgetEvents$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useWidgetEvents.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$RouteExecutionStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/routes/RouteExecutionStore.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$zustand$2f$esm$2f$vanilla$2f$shallow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/zustand/esm/vanilla/shallow.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/routes/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$types$2f$events$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/types/events.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$core$2f$execution$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/core/execution.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
const useRouteExecution = ({ routeId, executeInBackground, onAcceptExchangeRateUpdate })=>{
    const queryClient = useQueryClient();
    const { account } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAccount"])();
    const resumedAfterMount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(false);
    const emitter = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useWidgetEvents$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetEvents"])();
    const routeExecutionStoreContext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$RouteExecutionStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRouteExecutionStoreContext"])();
    const routeExecution = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$RouteExecutionStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRouteExecutionStore"])((state)=>state.routes[routeId]);
    const [updateRoute, restartRoute, deleteRoute] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$RouteExecutionStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRouteExecutionStore"])((state)=>[
            state.updateRoute,
            state.restartRoute,
            state.deleteRoute
        ], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$zustand$2f$esm$2f$vanilla$2f$shallow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["shallow"]);
    const updateRouteHook = (updatedRoute)=>{
        const routeExecution = routeExecutionStoreContext.getState().routes[updatedRoute.id];
        if (!routeExecution) {
            return;
        }
        const clonedUpdatedRoute = structuredClone(updatedRoute);
        updateRoute(clonedUpdatedRoute);
        const process = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getUpdatedProcess"])(routeExecution.route, clonedUpdatedRoute);
        if (process) {
            emitter.emit(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$types$2f$events$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WidgetEvent"].RouteExecutionUpdated, {
                route: clonedUpdatedRoute,
                process
            });
        }
        const executionCompleted = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isRouteDone"])(clonedUpdatedRoute);
        const executionFailed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isRouteFailed"])(clonedUpdatedRoute);
        if (executionCompleted) {
            emitter.emit(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$types$2f$events$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WidgetEvent"].RouteExecutionCompleted, clonedUpdatedRoute);
        }
        if (executionFailed && process) {
            emitter.emit(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$types$2f$events$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WidgetEvent"].RouteExecutionFailed, {
                route: clonedUpdatedRoute,
                process
            });
        }
        if (executionCompleted || executionFailed) {
            const invalidateKeys = [
                [
                    'token-balances',
                    clonedUpdatedRoute.fromAddress,
                    clonedUpdatedRoute.fromChainId
                ],
                [
                    'token-balances',
                    clonedUpdatedRoute.toAddress,
                    clonedUpdatedRoute.toChainId
                ],
                [
                    'transaction-history'
                ]
            ];
            for (const key of invalidateKeys){
                queryClient.invalidateQueries({
                    queryKey: key,
                    exact: false,
                    refetchType: 'all'
                }, {
                    cancelRefetch: false
                });
            }
        }
        // biome-ignore lint/suspicious/noConsole: logs route information
        console.log('Route updated.', clonedUpdatedRoute);
    };
    const acceptExchangeRateUpdateHook = async (params)=>{
        if (!onAcceptExchangeRateUpdate) {
            return false;
        }
        const accepted = await new Promise((resolve)=>onAcceptExchangeRateUpdate(resolve, params));
        return accepted;
    };
    const executeRouteMutation = useMutation({
        mutationFn: ()=>{
            if (!account.isConnected) {
                throw new Error('Account is not connected.');
            }
            if (!routeExecution?.route) {
                throw new Error('Execution route not found.');
            }
            queryClient.removeQueries({
                queryKey: [
                    'routes'
                ],
                exact: false
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$core$2f$execution$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["executeRoute"])(routeExecution.route, {
                updateRouteHook,
                acceptExchangeRateUpdateHook,
                infiniteApproval: false,
                executeInBackground
            });
        },
        onMutate: ()=>{
            // biome-ignore lint/suspicious/noConsole: logs route information
            console.log('Execution started.', routeId);
            if (routeExecution) {
                emitter.emit(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$types$2f$events$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WidgetEvent"].RouteExecutionStarted, routeExecution.route);
            }
        }
    });
    const resumeRouteMutation = useMutation({
        mutationFn: (resumedRoute)=>{
            if (!account.isConnected) {
                throw new Error('Account is not connected.');
            }
            if (!routeExecution?.route) {
                throw new Error('Execution route not found.');
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$core$2f$execution$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["resumeRoute"])(resumedRoute ?? routeExecution.route, {
                updateRouteHook,
                acceptExchangeRateUpdateHook,
                infiniteApproval: false,
                executeInBackground
            });
        },
        onMutate: ()=>{
            // biome-ignore lint/suspicious/noConsole: logs route information
            console.log('Resumed to execution.', routeId);
        }
    });
    const _executeRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(()=>{
        executeRouteMutation.mutateAsync(undefined, {
            onError: (error)=>{
                console.warn('Execution failed!', routeId, error);
            },
            onSuccess: (route)=>{
                // biome-ignore lint/suspicious/noConsole: logs route information
                console.log('Executed successfully!', route);
            }
        });
    }, [
        executeRouteMutation,
        routeId
    ]);
    const _resumeRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((route)=>{
        resumeRouteMutation.mutateAsync(route, {
            onError: (error)=>{
                console.warn('Resumed execution failed.', routeId, error);
            },
            onSuccess: (route)=>{
                // biome-ignore lint/suspicious/noConsole: logs route information
                console.log('Resumed execution successful.', route);
            }
        });
    }, [
        resumeRouteMutation,
        routeId
    ]);
    // biome-ignore lint/correctness/useExhaustiveDependencies:
    const restartRouteMutation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(()=>{
        restartRoute(routeId);
        _resumeRoute(routeExecution?.route);
    }, [
        _resumeRoute,
        routeExecution?.route,
        routeId
    ]);
    // biome-ignore lint/correctness/useExhaustiveDependencies:
    const deleteRouteMutation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(()=>{
        deleteRoute(routeId);
    }, [
        routeId
    ]);
    // Resume route execution after page reload
    // biome-ignore lint/correctness/useExhaustiveDependencies:
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        // Check if route is eligible for automatic resuming
        const route = routeExecutionStoreContext.getState().routes[routeId]?.route;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isRouteActive"])(route) && account.isConnected && !resumedAfterMount.current) {
            resumedAfterMount.current = true;
            _resumeRoute();
        }
        // Move execution to background on unmount
        return ()=>{
            const route = routeExecutionStoreContext.getState().routes[routeId]?.route;
            if (!route || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isRouteActive"])(route)) {
                return;
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$core$2f$execution$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["updateRouteExecution"])(route, {
                executeInBackground: true
            });
            // biome-ignore lint/suspicious/noConsole: logs route information
            console.log('Move route execution to background.', routeId);
            resumedAfterMount.current = false;
        };
    }, [
        account.isConnected,
        routeExecutionStoreContext,
        routeId
    ]);
    return {
        executeRoute: _executeRoute,
        restartRoute: restartRouteMutation,
        deleteRoute: deleteRouteMutation,
        route: routeExecution?.route,
        status: routeExecution?.status
    };
}; //# sourceMappingURL=useRouteExecution.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useProcessMessage.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getProcessMessage": (()=>getProcessMessage),
    "useProcessMessage": (()=>useProcessMessage)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$i18next$2f$dist$2f$es$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/react-i18next/dist/es/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/providers/WidgetProvider/WidgetProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$i18next$2f$dist$2f$es$2f$useTranslation$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-i18next/dist/es/useTranslation.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useAvailableChains.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$format$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/utils/format.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/errors/constants.js [app-ssr] (ecmascript)");
;
;
;
;
;
const useProcessMessage = (step, process)=>{
    const { subvariant, subvariantOptions } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetConfig"])();
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$i18next$2f$dist$2f$es$2f$useTranslation$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTranslation"])();
    const { getChainById } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAvailableChains"])();
    if (!step || !process) {
        return {};
    }
    return getProcessMessage(t, getChainById, step, process, subvariant, subvariantOptions);
};
const processStatusMessages = {
    TOKEN_ALLOWANCE: {
        STARTED: (t)=>t('main.process.tokenAllowance.started'),
        ACTION_REQUIRED: (t)=>t('main.process.tokenAllowance.pending'),
        PENDING: (t)=>t('main.process.tokenAllowance.pending'),
        DONE: (t)=>t('main.process.tokenAllowance.done')
    },
    SWITCH_CHAIN: {
        ACTION_REQUIRED: (t)=>t('main.process.switchChain.actionRequired'),
        DONE: (t)=>t('main.process.switchChain.done')
    },
    SWAP: {
        STARTED: (t)=>t('main.process.swap.started'),
        ACTION_REQUIRED: (t)=>t('main.process.swap.actionRequired'),
        PENDING: (t)=>t('main.process.swap.pending'),
        DONE: (t, subvariant, subvariantOptions)=>subvariant === 'custom' ? t(`main.process.${subvariantOptions?.custom ?? 'checkout'}.done`) : t('main.process.swap.done')
    },
    CROSS_CHAIN: {
        STARTED: (t)=>t('main.process.bridge.started'),
        ACTION_REQUIRED: (t)=>t('main.process.bridge.actionRequired'),
        PENDING: (t)=>t('main.process.bridge.pending'),
        DONE: (t)=>t('main.process.bridge.done')
    },
    RECEIVING_CHAIN: {
        PENDING: (t)=>t('main.process.receivingChain.pending'),
        DONE: (t, subvariant, subvariantOptions)=>subvariant === 'custom' ? t(`main.process.${subvariantOptions?.custom ?? 'checkout'}.done`) : t('main.process.receivingChain.done')
    },
    TRANSACTION: {}
};
const processSubstatusMessages = {
    PENDING: {
    },
    DONE: {
        // COMPLETED: 'The transfer is complete.',
        PARTIAL: (t)=>t('main.process.receivingChain.partial'),
        REFUNDED: (t)=>t('main.process.receivingChain.partial')
    },
    FAILED: {
    },
    INVALID: {},
    NOT_FOUND: {}
};
function getProcessMessage(t, getChainById, step, process, subvariant, subvariantOptions) {
    if (process.error && process.status === 'FAILED') {
        const getDefaultErrorMessage = (key)=>`${t(key ?? 'error.message.transactionNotSent')} ${t('error.message.remainInYourWallet', {
                amount: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$format$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatTokenAmount"])(BigInt(step.action.fromAmount), step.action.fromToken.decimals),
                tokenSymbol: step.action.fromToken.symbol,
                chainName: getChainById(step.action.fromChainId)?.name ?? ''
            })}`;
        let title = '';
        let message = '';
        switch(process.error.code){
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].AllowanceRequired:
                title = t('error.title.allowanceRequired');
                message = t('error.message.allowanceRequired', {
                    tokenSymbol: step.action.fromToken.symbol
                });
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].BalanceError:
                title = t('error.title.balanceIsTooLow');
                message = getDefaultErrorMessage();
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].ChainSwitchError:
                title = t('error.title.chainSwitch');
                message = getDefaultErrorMessage();
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].GasLimitError:
                title = t('error.title.gasLimitIsTooLow');
                message = getDefaultErrorMessage();
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].InsufficientFunds:
                title = t('error.title.insufficientFunds');
                message = `${t('error.message.insufficientFunds')} ${getDefaultErrorMessage()}`;
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].SlippageError:
                title = t('error.title.slippageNotMet');
                message = t('error.message.slippageThreshold');
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].TransactionFailed:
                title = t('error.title.transactionFailed');
                message = t('error.message.transactionFailed');
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].TransactionExpired:
                title = t('error.title.transactionExpired');
                message = t('error.message.transactionExpired');
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].TransactionSimulationFailed:
                title = t('error.title.transactionSimulationFailed');
                message = t('error.message.transactionSimulationFailed');
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].WalletChangedDuringExecution:
                title = t('error.title.walletMismatch');
                message = t('error.message.walletChangedDuringExecution');
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].TransactionUnderpriced:
                title = t('error.title.transactionUnderpriced');
                message = getDefaultErrorMessage();
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].TransactionUnprepared:
                title = t('error.title.transactionUnprepared');
                message = getDefaultErrorMessage();
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].TransactionCanceled:
                title = t('error.title.transactionCanceled');
                message = getDefaultErrorMessage('error.message.transactionCanceled');
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].TransactionConflict:
                title = t('error.title.transactionConflict');
                message = getDefaultErrorMessage('error.message.transactionConflict');
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].ExchangeRateUpdateCanceled:
                title = t('error.title.exchangeRateUpdateCanceled');
                message = getDefaultErrorMessage();
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].SignatureRejected:
                title = t('error.title.signatureRejected');
                message = t('error.message.signatureRejected', {
                    amount: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$format$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatTokenAmount"])(BigInt(step.action.fromAmount), step.action.fromToken.decimals),
                    tokenSymbol: step.action.fromToken.symbol,
                    chainName: getChainById(step.action.fromChainId)?.name ?? ''
                });
                break;
            default:
                title = t('error.title.unknown');
                if (process.txHash) {
                    message = t('error.message.transactionFailed');
                } else {
                    message = process.error.message || t('error.message.unknown');
                }
                break;
        }
        return {
            title,
            message
        };
    }
    const title = processSubstatusMessages[process.status]?.[process.substatus]?.(t) ?? processStatusMessages[process.type]?.[process.status]?.(t, subvariant, subvariantOptions);
    return {
        title
    };
} //# sourceMappingURL=useProcessMessage.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/timer/utils.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getDelayFromExpiryTimestamp": (()=>getDelayFromExpiryTimestamp),
    "getSecondsFromExpiry": (()=>getSecondsFromExpiry),
    "getTimeFromSeconds": (()=>getTimeFromSeconds),
    "validateExpiryTimestamp": (()=>validateExpiryTimestamp),
    "validateOnExpire": (()=>validateOnExpire)
});
function getTimeFromSeconds(secs) {
    const totalSeconds = Math.ceil(secs);
    const days = Math.floor(totalSeconds / (60 * 60 * 24));
    const hours = Math.floor(totalSeconds % (60 * 60 * 24) / (60 * 60));
    const minutes = Math.floor(totalSeconds % (60 * 60) / 60);
    const seconds = Math.floor(totalSeconds % 60);
    return {
        totalSeconds,
        seconds,
        minutes,
        hours,
        days
    };
}
function getSecondsFromExpiry(expiry, shouldRound) {
    const now = new Date().getTime();
    const milliSecondsDistance = expiry.getTime() - now;
    if (milliSecondsDistance > 0) {
        const val = milliSecondsDistance / 1000;
        return shouldRound ? Math.round(val) : val;
    }
    return 0;
}
function validateExpiryTimestamp(expiryTimestamp) {
    const isValid = new Date(expiryTimestamp).getTime() > 0;
    if (!isValid) {
        console.warn('useTimer Invalid expiryTimestamp settings', expiryTimestamp);
    }
    return isValid;
}
function validateOnExpire(onExpire) {
    const isValid = onExpire && typeof onExpire === 'function';
    if (onExpire && !isValid) {
        console.warn('useTimer Invalid onExpire settings function', onExpire);
    }
    return isValid;
}
function getDelayFromExpiryTimestamp(expiryTimestamp, defaultDelay) {
    if (!validateExpiryTimestamp(expiryTimestamp)) {
        return 0;
    }
    const seconds = getSecondsFromExpiry(expiryTimestamp);
    const extraMilliSeconds = Math.floor((seconds - Math.floor(seconds)) * 1000);
    return extraMilliSeconds > 0 ? extraMilliSeconds : defaultDelay;
} //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/timer/useInterval.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useInterval": (()=>useInterval)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
function useInterval(callback, delay) {
    const callbacRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    // update callback function with current render callback that has access to latest props and state
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        callbacRef.current = callback;
    });
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (!delay) {
            return ()=>{};
        }
        const interval = setInterval(()=>{
            callbacRef.current?.();
        }, delay);
        return ()=>clearInterval(interval);
    }, [
        delay
    ]);
} //# sourceMappingURL=useInterval.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/timer/useTimer.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useTimer": (()=>useTimer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$timer$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/timer/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$timer$2f$useInterval$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/timer/useInterval.js [app-ssr] (ecmascript)");
;
;
;
const DEFAULT_DELAY = 1000;
function useTimer({ expiryTimestamp: expiry, onExpire, autoStart = true }) {
    const [expiryTimestamp, setExpiryTimestamp] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(expiry);
    const [seconds, setSeconds] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$timer$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSecondsFromExpiry"])(expiryTimestamp));
    const [isRunning, setIsRunning] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(autoStart);
    const [didStart, setDidStart] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(autoStart);
    const [delay, setDelay] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$timer$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getDelayFromExpiryTimestamp"])(expiryTimestamp, DEFAULT_DELAY));
    const handleExpire = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(()=>{
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$timer$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["validateOnExpire"])(onExpire) && onExpire();
        setIsRunning(false);
        setDelay(0);
    }, [
        onExpire
    ]);
    const pause = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(()=>{
        setIsRunning(false);
    }, []);
    const restart = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((newExpiryTimestamp, newAutoStart = true)=>{
        setDelay((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$timer$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getDelayFromExpiryTimestamp"])(newExpiryTimestamp, DEFAULT_DELAY));
        setDidStart(newAutoStart);
        setIsRunning(newAutoStart);
        setExpiryTimestamp(newExpiryTimestamp);
        setSeconds((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$timer$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSecondsFromExpiry"])(newExpiryTimestamp));
    }, []);
    const resume = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(()=>{
        const time = new Date();
        time.setMilliseconds(time.getMilliseconds() + seconds * 1000);
        restart(time);
    }, [
        seconds,
        restart
    ]);
    const start = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(()=>{
        if (didStart) {
            setSeconds((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$timer$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSecondsFromExpiry"])(expiryTimestamp));
            setIsRunning(true);
        } else {
            resume();
        }
    }, [
        expiryTimestamp,
        didStart,
        resume
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$timer$2f$useInterval$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useInterval"])(()=>{
        if (delay !== DEFAULT_DELAY) {
            setDelay(DEFAULT_DELAY);
        }
        const secondsValue = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$timer$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSecondsFromExpiry"])(expiryTimestamp);
        setSeconds(secondsValue);
        if (secondsValue <= 0) {
            handleExpire();
        }
    }, isRunning ? delay : 0);
    return {
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$timer$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getTimeFromSeconds"])(seconds),
        start,
        pause,
        resume,
        restart,
        isRunning
    };
} //# sourceMappingURL=useTimer.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useTokens.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useTokens": (()=>useTokens)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/providers/WidgetProvider/WidgetProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/services/api.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$types$2f$src$2f$_esm$2f$chains$2f$Chain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/types/src/_esm/chains/Chain.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useChains.js [app-ssr] (ecmascript)");
;
;
;
;
;
const useTokens = (selectedChainId)=>{
    const { tokens: configTokens } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetConfig"])();
    const { data, isLoading } = useQuery({
        queryKey: [
            'tokens'
        ],
        queryFn: ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getTokens"])({
                chainTypes: [
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$types$2f$src$2f$_esm$2f$chains$2f$Chain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ChainType"].EVM,
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$types$2f$src$2f$_esm$2f$chains$2f$Chain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ChainType"].SVM,
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$types$2f$src$2f$_esm$2f$chains$2f$Chain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ChainType"].UTXO
                ]
            }),
        refetchInterval: 3600000,
        staleTime: 3600000
    });
    const { chains, isLoading: isSupportedChainsLoading, getChainById } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChains"])();
    const filteredData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>{
        if (isSupportedChainsLoading || !data) {
            return;
        }
        const chain = getChainById(selectedChainId, chains);
        const chainAllowed = selectedChainId && chain;
        if (!chainAllowed) {
            return;
        }
        let filteredTokens = data.tokens?.[selectedChainId] || [];
        const includedTokens = configTokens?.include?.filter((token)=>token.chainId === selectedChainId);
        if (includedTokens?.length) {
            filteredTokens = [
                ...includedTokens,
                ...filteredTokens
            ];
        }
        if (configTokens?.allow?.length || configTokens?.deny?.length) {
            const allowedTokensSet = new Set(configTokens?.allow?.filter((token)=>token.chainId === selectedChainId).map((token)=>token.address));
            const deniedTokenAddressesSet = new Set(configTokens?.deny?.filter((token)=>token.chainId === selectedChainId).map((token)=>token.address));
            if (allowedTokensSet.size || deniedTokenAddressesSet.size) {
                filteredTokens = filteredTokens.filter((token)=>(!allowedTokensSet.size || allowedTokensSet.has(token.address)) && !deniedTokenAddressesSet.has(token.address));
            }
        }
        const filteredTokensMap = new Map(filteredTokens.map((token)=>[
                token.address,
                token
            ]));
        const [popularTokens, featuredTokens] = [
            'popular',
            'featured'
        ].map((tokenType)=>{
            const typedConfigTokens = configTokens?.[tokenType]?.filter((token)=>token.chainId === selectedChainId);
            const populatedConfigTokens = typedConfigTokens?.map((token)=>{
                // Mark token as popular
                ;
                token[tokenType] = true;
                // Check if this token exists in the filteredTokensMap and add priceUSD if it does
                const matchingFilteredToken = filteredTokensMap.get(token.address);
                if (matchingFilteredToken?.priceUSD) {
                    ;
                    token.priceUSD = matchingFilteredToken.priceUSD;
                }
                if (!token.logoURI && matchingFilteredToken) {
                    ;
                    token.logoURI = matchingFilteredToken.logoURI;
                }
                return token;
            });
            if (populatedConfigTokens?.length) {
                const configTokenAddresses = new Set(populatedConfigTokens?.map((token)=>token.address));
                filteredTokens = filteredTokens.filter((token)=>!configTokenAddresses.has(token.address));
                populatedConfigTokens.push(...filteredTokens);
                filteredTokens = populatedConfigTokens;
            }
            return populatedConfigTokens;
        });
        return {
            tokens: filteredTokens,
            featuredTokens,
            popularTokens,
            chain
        };
    }, [
        chains,
        configTokens,
        data,
        getChainById,
        isSupportedChainsLoading,
        selectedChainId
    ]);
    return {
        tokens: filteredData?.tokens,
        featuredTokens: filteredData?.featuredTokens,
        popularTokens: filteredData?.popularTokens,
        chain: filteredData?.chain,
        isLoading
    };
}; //# sourceMappingURL=useTokens.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useTokenSearch.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useTokenSearch": (()=>useTokenSearch)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/services/api.js [app-ssr] (ecmascript)");
;
;
const useTokenSearch = (chainId, tokenQuery, enabled)=>{
    const queryClient = useQueryClient();
    const { data, isLoading } = useQuery({
        queryKey: [
            'token-search',
            chainId,
            tokenQuery
        ],
        queryFn: async ({ queryKey: [, chainId, tokenQuery], signal })=>{
            const token = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getToken"])(chainId, tokenQuery, {
                signal
            });
            if (token) {
                queryClient.setQueriesData({
                    queryKey: [
                        'tokens'
                    ]
                }, (data)=>{
                    if (data && !data.tokens[chainId]?.some((t)=>t.address === token.address)) {
                        const clonedData = {
                            ...data
                        };
                        clonedData.tokens[chainId]?.push(token);
                        return clonedData;
                    }
                });
            }
            return token;
        },
        enabled: Boolean(chainId && tokenQuery && enabled),
        retry: false
    });
    return {
        token: data,
        isLoading
    };
}; //# sourceMappingURL=useTokenSearch.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useToken.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useToken": (()=>useToken)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokens$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useTokens.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokenSearch$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useTokenSearch.js [app-ssr] (ecmascript)");
;
;
;
const useToken = (chainId, tokenAddress)=>{
    const { tokens, isLoading } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokens$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTokens"])(chainId);
    const token = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>{
        const token = tokens?.find((token)=>token.address === tokenAddress && token.chainId === chainId);
        return token;
    }, [
        chainId,
        tokenAddress,
        tokens
    ]);
    const tokenSearchEnabled = !isLoading && !token;
    const { token: searchedToken, isLoading: isSearchedTokenLoading } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokenSearch$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTokenSearch"])(chainId, tokenAddress, tokenSearchEnabled);
    return {
        token: token ?? searchedToken,
        isLoading: isLoading || tokenSearchEnabled && isSearchedTokenLoading
    };
}; //# sourceMappingURL=useToken.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useSwapOnly.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useSwapOnly": (()=>useSwapOnly)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSplitSubvariantStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/settings/useSplitSubvariantStore.js [app-ssr] (ecmascript)");
;
const useSwapOnly = ()=>{
    const state = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSplitSubvariantStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSplitSubvariantStore"])((state)=>state.state);
    return state === 'swap';
}; //# sourceMappingURL=useSwapOnly.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useToAddressReset.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useToAddressReset": (()=>useToAddressReset)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/providers/WidgetProvider/WidgetProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldActions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/form/useFieldActions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$bookmarks$2f$useBookmarks$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/bookmarks/useBookmarks.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$bookmarks$2f$useBookmarkActions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/bookmarks/useBookmarkActions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSendToWalletStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/settings/useSendToWalletStore.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$types$2f$widget$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/types/widget.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
const useToAddressReset = ()=>{
    const { requiredUI } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetConfig"])();
    const { setFieldValue, isDirty } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldActions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useFieldActions"])();
    const { selectedBookmark } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$bookmarks$2f$useBookmarks$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useBookmarks"])();
    const { setSelectedBookmark } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$bookmarks$2f$useBookmarkActions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useBookmarkActions"])();
    const { setSendToWallet } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSendToWalletStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSendToWalletActions"])();
    const tryResetToAddress = (toChain)=>{
        const requiredToAddress = requiredUI?.includes(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$types$2f$widget$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RequiredUI"].ToAddress);
        const bookmarkSatisfiesToChainType = selectedBookmark?.chainType === toChain?.chainType;
        const shouldResetToAddress = !requiredToAddress && !bookmarkSatisfiesToChainType;
        // The toAddress field is required and always visible when bridging between
        // different ecosystems (fromChain and toChain have different chain types).
        // We reset toAddress on each chain change if it's no longer required, ensuring that
        // switching chain types doesn't leave a previously set toAddress value when
        // the "Send to Wallet" field is hidden.
        if (shouldResetToAddress) {
            setFieldValue('toAddress', '', {
                isTouched: true
            });
            setSelectedBookmark();
            // If toAddress was auto-filled (e.g., when making cross-ecosystem bridging and compatible destination wallet was connected)
            // and not manually edited by the user, we need to hide "Send to Wallet".
            const isToAddressDirty = isDirty('toAddress');
            if (!isToAddressDirty) {
                setSendToWallet(false);
            }
        }
    };
    return {
        tryResetToAddress
    };
}; //# sourceMappingURL=useToAddressReset.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useToAddressAutoPopulate.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useToAddressAutoPopulate": (()=>useToAddressAutoPopulate)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldActions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/form/useFieldActions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSendToWalletStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/settings/useSendToWalletStore.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$bookmarks$2f$useBookmarkActions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/bookmarks/useBookmarkActions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useAvailableChains.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/wallet-management/dist/esm/hooks/useAccount.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$chainType$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/utils/chainType.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
const useToAddressAutoPopulate = ()=>{
    const { setFieldValue } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldActions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useFieldActions"])();
    const { setSendToWallet } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSendToWalletStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSendToWalletActions"])();
    const { setSelectedBookmark } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$bookmarks$2f$useBookmarkActions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useBookmarkActions"])();
    const { getChainById } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAvailableChains"])();
    const { accounts } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAccount"])();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(({ formType, selectedToAddress, selectedChainId, selectedOppositeTokenAddress, selectedOppositeChainId })=>{
        if (!selectedOppositeTokenAddress || !selectedOppositeChainId || !selectedChainId || !accounts?.length) {
            return;
        }
        const selectedChain = getChainById?.(selectedChainId);
        const selectedOppositeChain = getChainById?.(selectedOppositeChainId);
        // Proceed if both chains are defined and of different ecosystem types (indicating cross-ecosystem bridging)
        if (!selectedChain || !selectedOppositeChain || selectedChain.chainType === selectedOppositeChain.chainType) {
            return;
        }
        // Identify the destination chain type based on the bridge direction ('from' or 'to')
        const destinationChainType = formType === 'from' ? selectedOppositeChain.chainType : selectedChain.chainType;
        // If toAddress is already selected, verify that it matches the destination chain type
        if (selectedToAddress) {
            const selectedToAddressChainType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$chainType$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getChainTypeFromAddress"])(selectedToAddress);
            if (destinationChainType === selectedToAddressChainType) {
                return;
            }
        }
        // Find connected account compatible with the destination chain type
        const destinationAccount = accounts?.find((account)=>account.chainType === destinationChainType);
        // If a compatible destination account is found, set toAddress as if selecting it from the "Send to Wallet" connected wallets page
        if (destinationAccount?.address) {
            setFieldValue('toAddress', destinationAccount.address, {
                isDirty: false,
                isTouched: true
            });
            setSelectedBookmark({
                name: destinationAccount.connector?.name,
                address: destinationAccount.address,
                chainType: destinationAccount.chainType,
                isConnectedAccount: true
            });
            setSendToWallet(true);
            return destinationAccount.address;
        }
    }, [
        accounts,
        getChainById,
        setFieldValue,
        setSelectedBookmark,
        setSendToWallet
    ]);
}; //# sourceMappingURL=useToAddressAutoPopulate.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useGasRecommendation.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useGasRecommendation": (()=>useGasRecommendation)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useAvailableChains.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/services/api.js [app-ssr] (ecmascript)");
;
;
;
const refetchInterval = 60000;
const useGasRecommendation = (toChainId, fromChain, fromToken)=>{
    const { chains } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAvailableChains"])();
    const checkRecommendationLiFuel = Boolean(toChainId) && Boolean(fromChain) && Boolean(fromToken) && Boolean(chains?.length);
    const checkRecommendationMaxButton = Boolean(toChainId) && !fromChain && !fromToken && Boolean(chains?.length);
    return useQuery({
        queryKey: [
            'gas-recommendation',
            toChainId,
            fromChain,
            fromToken
        ],
        queryFn: async ({ queryKey: [_, toChainId, fromChain, fromToken], signal })=>{
            if (!chains?.some((chain)=>chain.id === toChainId)) {
                return null;
            }
            const gasRecommendation = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getGasRecommendation"])({
                chainId: toChainId,
                fromChain: fromChain,
                fromToken: fromToken
            }, {
                signal
            });
            return gasRecommendation;
        },
        enabled: checkRecommendationLiFuel || checkRecommendationMaxButton,
        refetchInterval,
        staleTime: refetchInterval
    });
}; //# sourceMappingURL=useGasRecommendation.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useTokenBalances.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useTokenBalances": (()=>useTokenBalances)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokens$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useTokens.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/wallet-management/dist/esm/hooks/useAccount.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$balance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/services/balance.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$unit$2f$formatUnits$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/unit/formatUnits.js [app-ssr] (ecmascript)");
;
;
;
;
;
const defaultRefetchInterval = 32000;
const useTokenBalances = (selectedChainId)=>{
    const { tokens, featuredTokens, popularTokens, chain, isLoading } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokens$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTokens"])(selectedChainId);
    const { account } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAccount"])({
        chainType: chain?.chainType
    });
    const isBalanceLoadingEnabled = Boolean(account.address) && Boolean(tokens?.length) && Boolean(selectedChainId);
    const { data: tokensWithBalance, isLoading: isBalanceLoading, refetch } = useQuery({
        queryKey: [
            'token-balances',
            account.address,
            selectedChainId,
            tokens?.length
        ],
        queryFn: async ({ queryKey: [, accountAddress] })=>{
            const tokensWithBalance = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$balance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getTokenBalances"])(accountAddress, tokens);
            if (!tokensWithBalance?.length) {
                return tokens;
            }
            const sortFn = (a, b)=>Number.parseFloat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$unit$2f$formatUnits$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatUnits"])(b.amount ?? 0n, b.decimals)) * Number.parseFloat(b.priceUSD ?? '0') - Number.parseFloat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$unit$2f$formatUnits$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatUnits"])(a.amount ?? 0n, a.decimals)) * Number.parseFloat(a.priceUSD ?? '0');
            const featuredTokens = [];
            const tokensWithAmount = [];
            const popularTokens = [];
            const allTokens = [];
            tokensWithBalance.forEach((token)=>{
                if (token.amount) {
                    token.featured = false;
                    token.popular = false;
                }
                if (token.featured) {
                    featuredTokens.push(token);
                } else if (token.amount) {
                    tokensWithAmount.push(token);
                } else if (token.popular) {
                    popularTokens.push(token);
                } else {
                    allTokens.push(token);
                }
            });
            tokensWithAmount.sort(sortFn);
            const result = [
                ...featuredTokens,
                ...tokensWithAmount,
                ...popularTokens,
                ...allTokens
            ];
            return result;
        },
        enabled: isBalanceLoadingEnabled,
        refetchInterval: defaultRefetchInterval,
        staleTime: defaultRefetchInterval
    });
    return {
        tokens,
        tokensWithBalance,
        featuredTokens,
        popularTokens,
        chain,
        isLoading,
        isBalanceLoading: isBalanceLoading && isBalanceLoadingEnabled,
        refetch
    };
}; //# sourceMappingURL=useTokenBalances.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useTokenAddressBalance.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useTokenAddressBalance": (()=>useTokenAddressBalance)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokenBalances$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useTokenBalances.js [app-ssr] (ecmascript)");
;
;
const useTokenAddressBalance = (chainId, tokenAddress)=>{
    const { tokens, tokensWithBalance, chain, isBalanceLoading, refetch } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokenBalances$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTokenBalances"])(chainId);
    const token = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>{
        if (tokenAddress && chainId) {
            const token = (tokensWithBalance ?? tokens)?.find((token)=>token.address === tokenAddress && token.chainId === chainId);
            return token;
        }
    }, [
        chainId,
        tokenAddress,
        tokens,
        tokensWithBalance
    ]);
    return {
        token,
        chain,
        isLoading: isBalanceLoading,
        refetch
    };
}; //# sourceMappingURL=useTokenAddressBalance.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useDebouncedWatch.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useDebouncedWatch": (()=>useDebouncedWatch)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/form/useFieldValues.js [app-ssr] (ecmascript)");
;
;
const useDebouncedWatch = (delay, ...name)=>{
    const watchedValue = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useFieldValues"])(...name);
    const [debouncedValue, setDebouncedValue] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(watchedValue);
    const debouncedValueRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    const isMounted = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(false);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (isMounted.current) {
            const hasWatchedValue = watchedValue.some((value)=>value);
            if (hasWatchedValue) {
                const handler = setTimeout(()=>{
                    setDebouncedValue(watchedValue);
                }, delay);
                return ()=>clearTimeout(handler);
            }
            debouncedValueRef.current = watchedValue;
            setDebouncedValue(watchedValue);
            return undefined;
        }
        isMounted.current = true;
        return undefined;
    }, [
        delay,
        watchedValue
    ]);
    return debouncedValue;
}; //# sourceMappingURL=useDebouncedWatch.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useIsContractAddress.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useIsContractAddress": (()=>useIsContractAddress)
});
(()=>{
    const e = new Error("Cannot find module 'wagmi'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$types$2f$src$2f$_esm$2f$chains$2f$Chain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/types/src/_esm/chains/Chain.js [app-ssr] (ecmascript)");
;
;
const useIsContractAddress = (address, chainId, chainType)=>{
    const { data: contractCode } = useBytecode({
        address: address,
        chainId: chainId,
        query: {
            refetchInterval: 300000,
            staleTime: 300000,
            enabled: Boolean(chainType === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$types$2f$src$2f$_esm$2f$chains$2f$Chain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ChainType"].EVM && chainId)
        }
    });
    return {
        isContractAddress: !!contractCode,
        contractCode
    };
}; //# sourceMappingURL=useIsContractAddress.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useTokenBalance.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getTokenBalancesWithRetry": (()=>getTokenBalancesWithRetry),
    "useTokenBalance": (()=>useTokenBalance)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$balance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/services/balance.js [app-ssr] (ecmascript)");
;
;
;
const defaultRefetchInterval = 30000;
const useTokenBalance = (accountAddress, token)=>{
    const queryClient = useQueryClient();
    const tokenBalanceQueryKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>[
            'token-balance',
            accountAddress,
            token?.chainId,
            token?.address
        ], [
        token?.address,
        token?.chainId,
        accountAddress
    ]);
    const { data, isLoading, refetch } = useQuery({
        queryKey: tokenBalanceQueryKey,
        queryFn: async ({ queryKey: [, accountAddress, tokenChainId, tokenAddress] })=>{
            const tokenBalances = await getTokenBalancesWithRetry(accountAddress, [
                token
            ]);
            if (!tokenBalances?.length) {
                throw new Error('Could not get tokens balance.');
            }
            const cachedTokenAmount = queryClient.getQueryData(tokenBalanceQueryKey);
            const tokenAmount = tokenBalances[0].amount;
            if (cachedTokenAmount?.amount !== tokenAmount) {
                queryClient.setQueryDefaults(tokenBalanceQueryKey, {
                    refetchInterval: defaultRefetchInterval,
                    staleTime: defaultRefetchInterval
                });
            }
            queryClient.setQueriesData({
                queryKey: [
                    'token-balances',
                    accountAddress,
                    tokenChainId
                ]
            }, (data)=>{
                if (data) {
                    const clonedData = [
                        ...data
                    ];
                    const index = clonedData.findIndex((dataToken)=>dataToken.address === tokenAddress);
                    clonedData[index] = {
                        ...clonedData[index],
                        amount: tokenAmount
                    };
                    return clonedData;
                }
            });
            return {
                ...tokenBalances[0],
                amount: tokenAmount
            };
        },
        enabled: Boolean(accountAddress && token),
        refetchInterval: defaultRefetchInterval,
        staleTime: defaultRefetchInterval
    });
    const refetchNewBalance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(()=>{
        queryClient.setQueryDefaults(tokenBalanceQueryKey, {
            refetchInterval: 250,
            staleTime: 250
        });
    }, [
        queryClient,
        tokenBalanceQueryKey
    ]);
    return {
        token: data,
        isLoading,
        refetch,
        refetchNewBalance,
        getTokenBalancesWithRetry
    };
};
const getTokenBalancesWithRetry = async (accountAddress, tokens, depth = 0)=>{
    try {
        const tokenBalances = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$balance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getTokenBalances"])(accountAddress, tokens);
        if (!tokenBalances.every((token)=>token.blockNumber)) {
            if (depth > 10) {
                console.warn('Token balance backoff depth exceeded.');
                return undefined;
            }
            await new Promise((resolve)=>{
                setTimeout(resolve, 1.5 ** depth * 100);
            });
            return getTokenBalancesWithRetry(accountAddress, tokens, depth + 1);
        }
        return tokenBalances;
    } catch (_error) {
    //
    }
}; //# sourceMappingURL=useTokenBalance.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useGasRefuel.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useGasRefuel": (()=>useGasRefuel)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useAvailableChains.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/form/useFieldValues.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/wallet-management/dist/esm/hooks/useAccount.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useIsContractAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useIsContractAddress.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokenBalance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useTokenBalance.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useGasRecommendation$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useGasRecommendation.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
const useGasRefuel = ()=>{
    const { getChainById } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAvailableChains"])();
    const [fromChainId, fromTokenAddress, toChainId, toAddress] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useFieldValues"])('fromChain', 'fromToken', 'toChain', 'toAddress');
    const toChain = getChainById(toChainId);
    const fromChain = getChainById(fromChainId);
    const { account: toAccount } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAccount"])({
        chainType: toChain?.chainType
    });
    const effectiveToAddress = toAddress || toAccount?.address;
    const { isContractAddress: isToContractAddress } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useIsContractAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useIsContractAddress"])(effectiveToAddress, toChainId, toChain?.chainType);
    const { token: destinationNativeToken } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokenBalance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTokenBalance"])(effectiveToAddress, toChainId ? toChain?.nativeToken : undefined);
    const { data: gasRecommendation, isLoading } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useGasRecommendation$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useGasRecommendation"])(toChainId, fromChainId, fromTokenAddress);
    // When we bridge between ecosystems we need to be sure toAddress is set
    const isChainTypeSatisfied = fromChain?.chainType !== toChain?.chainType ? Boolean(toAddress) : true;
    // We should not refuel to the contract address
    const isToAddressSatisfied = effectiveToAddress && !isToContractAddress;
    const enabled = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>{
        if (// We don't allow same chain refuel.
        // If a user runs out of gas, he can't send a source chain transaction.
        fromChainId === toChainId || !gasRecommendation?.available || !gasRecommendation?.recommended || !destinationNativeToken || !isChainTypeSatisfied || !isToAddressSatisfied) {
            return false;
        }
        const tokenBalance = destinationNativeToken.amount ?? 0n;
        // Check if the user balance < 50% of the recommended amount
        const recommendedAmount = BigInt(gasRecommendation.recommended.amount) / 2n;
        const insufficientGas = tokenBalance < recommendedAmount;
        return insufficientGas;
    }, [
        fromChainId,
        gasRecommendation,
        isChainTypeSatisfied,
        isToAddressSatisfied,
        destinationNativeToken,
        toChainId
    ]);
    return {
        enabled: enabled,
        availble: gasRecommendation?.available,
        isLoading: isLoading,
        chain: toChain,
        fromAmount: gasRecommendation?.available ? gasRecommendation.fromAmount : undefined
    };
}; //# sourceMappingURL=useGasRefuel.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useRoutes.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useRoutes": (()=>useRoutes)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/providers/WidgetProvider/WidgetProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$useSetExecutableRoute$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/routes/useSetExecutableRoute.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useWidgetEvents$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useWidgetEvents.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useSwapOnly$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useSwapOnly.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettings$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/settings/useSettings.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useDebouncedWatch$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useDebouncedWatch.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/form/useFieldValues.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useToken$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useToken.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useChain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useChain.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useGasRefuel$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useGasRefuel.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/wallet-management/dist/esm/hooks/useAccount.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$chainType$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/utils/chainType.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettingsStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/settings/useSettingsStore.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$unit$2f$parseUnits$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/unit/parseUnits.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/services/api.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$types$2f$events$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/types/events.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/errors/constants.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const refetchTime = 60000;
const useRoutes = ({ observableRoute } = {})=>{
    const { subvariant, sdkConfig, contractTool, bridges, exchanges, fee, feeConfig } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetConfig"])();
    const setExecutableRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$useSetExecutableRoute$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSetExecutableRoute"])();
    const queryClient = useQueryClient();
    const emitter = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useWidgetEvents$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetEvents"])();
    const swapOnly = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useSwapOnly$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSwapOnly"])();
    const { disabledBridges, disabledExchanges, enabledBridges, enabledExchanges, enabledAutoRefuel, routePriority, slippage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettings$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSettings"])([
        'disabledBridges',
        'disabledExchanges',
        'enabledBridges',
        'enabledExchanges',
        'enabledAutoRefuel',
        'routePriority',
        'slippage'
    ]);
    const [fromTokenAmount] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useDebouncedWatch$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDebouncedWatch"])(500, 'fromAmount');
    const [fromChainId, fromTokenAddress, toAddress, toTokenAmount, toChainId, toTokenAddress, contractCalls] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useFieldValues"])('fromChain', 'fromToken', 'toAddress', 'toAmount', 'toChain', 'toToken', 'contractCalls');
    const { token: fromToken } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useToken$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useToken"])(fromChainId, fromTokenAddress);
    const { token: toToken } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useToken$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useToken"])(toChainId, toTokenAddress);
    const { chain: fromChain } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useChain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChain"])(fromChainId);
    const { chain: toChain } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useChain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChain"])(toChainId);
    const { enabled: enabledRefuel, fromAmount: gasRecommendationFromAmount } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useGasRefuel$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useGasRefuel"])();
    const { account } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAccount"])({
        chainType: fromChain?.chainType
    });
    const hasAmount = Number(fromTokenAmount) > 0 || Number(toTokenAmount) > 0;
    const contractCallQuoteEnabled = subvariant === 'custom' ? Boolean(contractCalls && account.address) : true;
    // When we bridge between ecosystems we need to be sure toAddress is set and has the same chainType as toChain
    // If toAddress is set, it must have the same chainType as toChain
    const hasToAddressAndChainTypeSatisfied = !!toChain && !!toAddress && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$chainType$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getChainTypeFromAddress"])(toAddress) === toChain.chainType;
    // We need to check for toAddress only if it is set
    const isToAddressSatisfied = toAddress ? hasToAddressAndChainTypeSatisfied : true;
    // toAddress might be an empty string, but we need to pass undefined if there is no value
    const toWalletAddress = toAddress || undefined;
    // We need to send the full allowed tools array if custom tool settings are applied
    const allowedBridges = bridges?.allow?.length || bridges?.deny?.length ? enabledBridges : undefined;
    const allowedExchanges = exchanges?.allow?.length || exchanges?.deny?.length ? enabledExchanges : undefined;
    const isEnabled = Boolean(Number(fromChainId)) && Boolean(Number(toChainId)) && Boolean(fromToken?.address) && Boolean(toToken?.address) && !Number.isNaN(slippage) && hasAmount && isToAddressSatisfied && contractCallQuoteEnabled;
    // Some values should be strictly typed and isEnabled ensures that
    const queryKey = [
        'routes',
        account.address,
        fromChainId,
        fromToken?.address,
        fromTokenAmount,
        toWalletAddress,
        toChainId,
        toToken?.address,
        toTokenAmount,
        contractCalls,
        slippage,
        swapOnly,
        disabledBridges,
        disabledExchanges,
        allowedBridges,
        allowedExchanges,
        routePriority,
        subvariant,
        sdkConfig?.routeOptions?.allowSwitchChain,
        enabledRefuel && enabledAutoRefuel,
        gasRecommendationFromAmount,
        feeConfig?.fee || fee,
        observableRoute?.id
    ];
    const { data, isLoading, isFetching, isFetched, dataUpdatedAt, refetch } = useQuery({
        queryKey,
        queryFn: async ({ queryKey: [_, fromAddress, fromChainId, fromTokenAddress, fromTokenAmount, toAddress, toChainId, toTokenAddress, toTokenAmount, contractCalls, slippage = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettingsStore$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["defaultSlippage"], swapOnly, disabledBridges, disabledExchanges, allowedBridges, allowedExchanges, routePriority, subvariant, allowSwitchChain, enabledRefuel, gasRecommendationFromAmount, fee, _observableRouteId], signal })=>{
            const fromAmount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$unit$2f$parseUnits$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["parseUnits"])(fromTokenAmount, fromToken.decimals);
            const toAmount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$unit$2f$parseUnits$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["parseUnits"])(toTokenAmount, toToken.decimals);
            const formattedSlippage = Number.parseFloat(slippage) / 100;
            const allowBridges = swapOnly ? [] : observableRoute ? observableRoute.steps.flatMap((step)=>step.includedSteps.reduce((toolKeys, includedStep)=>{
                    if (includedStep.type === 'cross') {
                        toolKeys.push(includedStep.toolDetails.key);
                    }
                    return toolKeys;
                }, [])) : allowedBridges;
            const allowExchanges = observableRoute ? observableRoute.steps.flatMap((step)=>step.includedSteps.reduce((toolKeys, includedStep)=>{
                    if (includedStep.type === 'swap') {
                        toolKeys.push(includedStep.toolDetails.key);
                    }
                    return toolKeys;
                }, [])) : allowedExchanges;
            const calculatedFee = await feeConfig?.calculateFee?.({
                fromChainId,
                toChainId,
                fromTokenAddress,
                toTokenAddress,
                fromAddress,
                toAddress,
                fromAmount,
                toAmount,
                slippage: formattedSlippage
            });
            if (subvariant === 'custom' && contractCalls && toAmount) {
                const contractCallQuote = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getContractCallsQuote"])({
                    // Contract calls are enabled only when fromAddress is set
                    fromAddress: fromAddress,
                    fromChain: fromChainId,
                    fromToken: fromTokenAddress,
                    toAmount: toAmount.toString(),
                    toChain: toChainId,
                    toToken: toTokenAddress,
                    contractCalls,
                    denyBridges: disabledBridges.length ? disabledBridges : undefined,
                    denyExchanges: disabledExchanges.length ? disabledExchanges : undefined,
                    allowBridges,
                    allowExchanges,
                    toFallbackAddress: toAddress,
                    slippage: formattedSlippage,
                    fee: calculatedFee || fee
                }, {
                    signal
                });
                contractCallQuote.action.toToken = toToken;
                const customStep = subvariant === 'custom' ? contractCallQuote.includedSteps?.find((step)=>step.type === 'custom') : undefined;
                if (customStep && contractTool) {
                    const toolDetails = {
                        key: contractTool.name,
                        name: contractTool.name,
                        logoURI: contractTool.logoURI
                    };
                    customStep.toolDetails = toolDetails;
                    contractCallQuote.toolDetails = toolDetails;
                }
                const route = {
                    id: crypto.randomUUID(),
                    fromChainId: contractCallQuote.action.fromChainId,
                    fromAmountUSD: contractCallQuote.estimate.fromAmountUSD || '',
                    fromAmount: contractCallQuote.action.fromAmount,
                    fromToken: contractCallQuote.action.fromToken,
                    fromAddress: contractCallQuote.action.fromAddress,
                    toChainId: contractCallQuote.action.toChainId,
                    toAmountUSD: contractCallQuote.estimate.toAmountUSD || '',
                    toAmount: contractCallQuote.estimate.toAmount,
                    toAmountMin: contractCallQuote.estimate.toAmountMin,
                    toToken: toToken,
                    toAddress: contractCallQuote.action.toAddress || contractCallQuote.action.fromAddress,
                    gasCostUSD: contractCallQuote.estimate.gasCosts?.[0].amountUSD,
                    steps: [
                        contractCallQuote
                    ],
                    insurance: {
                        state: 'NOT_INSURABLE',
                        feeAmountUsd: '0'
                    }
                };
                return {
                    routes: [
                        route
                    ]
                };
            }
            // Prevent sending a request for the same chain token combinations.
            if (fromChainId === toChainId && fromTokenAddress === toTokenAddress) {
                return;
            }
            const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getRoutes"])({
                fromAddress,
                fromAmount: fromAmount.toString(),
                fromChainId,
                fromTokenAddress,
                toAddress,
                toChainId,
                toTokenAddress,
                fromAmountForGas: enabledRefuel && gasRecommendationFromAmount ? gasRecommendationFromAmount : undefined,
                options: {
                    allowSwitchChain: subvariant === 'refuel' ? false : allowSwitchChain,
                    bridges: allowBridges?.length || disabledBridges.length ? {
                        allow: allowBridges,
                        deny: disabledBridges.length ? disabledBridges : undefined
                    } : undefined,
                    exchanges: allowExchanges?.length || disabledExchanges.length ? {
                        allow: allowExchanges,
                        deny: disabledExchanges.length ? disabledExchanges : undefined
                    } : undefined,
                    order: routePriority,
                    slippage: formattedSlippage,
                    fee: calculatedFee || fee
                }
            }, {
                signal
            });
            if (data.routes[0] && fromAddress) {
                // Update local tokens cache to keep priceUSD in sync
                const { fromToken, toToken } = data.routes[0];
                [
                    fromToken,
                    toToken
                ].forEach((token)=>{
                    queryClient.setQueriesData({
                        queryKey: [
                            'token-balances',
                            fromAddress,
                            token.chainId
                        ]
                    }, (data)=>{
                        if (data) {
                            const clonedData = [
                                ...data
                            ];
                            const index = clonedData.findIndex((dataToken)=>dataToken.address === token.address);
                            clonedData[index] = {
                                ...clonedData[index],
                                ...token
                            };
                            return clonedData;
                        }
                    });
                });
            }
            emitter.emit(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$types$2f$events$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WidgetEvent"].AvailableRoutes, data.routes);
            return data;
        },
        enabled: isEnabled,
        staleTime: refetchTime,
        refetchInterval (query) {
            return Math.min(Math.abs(refetchTime - (Date.now() - query.state.dataUpdatedAt)), refetchTime);
        },
        retry (failureCount, error) {
            if (failureCount >= 5) {
                return false;
            }
            if (error?.code === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$errors$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LiFiErrorCode"].NotFound) {
                return false;
            }
            return true;
        }
    });
    const setReviewableRoute = (route)=>{
        const queryDataKey = queryKey.toSpliced(queryKey.length - 1, 1, route.id);
        queryClient.setQueryData(queryDataKey, {
            routes: [
                route
            ]
        }, {
            updatedAt: dataUpdatedAt
        });
        setExecutableRoute(route);
    };
    return {
        routes: data?.routes,
        isLoading: isEnabled && isLoading,
        isFetching,
        isFetched,
        dataUpdatedAt,
        refetchTime,
        refetch,
        fromChain,
        toChain,
        queryKey,
        setReviewableRoute
    };
}; //# sourceMappingURL=useRoutes.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useToAddressRequirements.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useToAddressRequirements": (()=>useToAddressRequirements)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/providers/WidgetProvider/WidgetProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/form/useFieldValues.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useChain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useChain.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/wallet-management/dist/esm/hooks/useAccount.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useIsContractAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useIsContractAddress.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$eip7702$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/utils/eip7702.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$types$2f$widget$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/types/widget.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
const useToAddressRequirements = ()=>{
    const { requiredUI } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetConfig"])();
    const [fromChainId, toChainId, toAddress] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useFieldValues"])('fromChain', 'toChain', 'toAddress');
    const { chain: fromChain } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useChain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChain"])(fromChainId);
    const { chain: toChain } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useChain$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChain"])(toChainId);
    const { account } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAccount"])({
        chainType: fromChain?.chainType
    });
    const { isContractAddress: isFromContractAddress, contractCode: fromContractCode } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useIsContractAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useIsContractAddress"])(account.address, fromChainId, account.chainType);
    const { isContractAddress: isToContractAddress } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useIsContractAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useIsContractAddress"])(toAddress, toChainId, toChain?.chainType);
    const isDifferentChainType = fromChain && toChain && fromChain.chainType !== toChain.chainType;
    const isCrossChainContractAddress = isFromContractAddress && fromChainId !== toChainId;
    const accountNotDeployedAtDestination = isFromContractAddress && // We don't want to block transfers for EIP-7702 accounts since they are designed
    // to maintain EOA-like properties while delegating execution.
    !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$eip7702$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isDelegationDesignatorCode"])(fromContractCode) && !isToContractAddress && account.address?.toLowerCase() === toAddress?.toLowerCase();
    const requiredToAddress = requiredUI?.includes(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$types$2f$widget$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RequiredUI"].ToAddress) || isDifferentChainType || isCrossChainContractAddress;
    return {
        requiredToAddress,
        requiredToChainType: toChain?.chainType,
        accountNotDeployedAtDestination,
        toAddress
    };
}; //# sourceMappingURL=useToAddressRequirements.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useFromTokenSufficiency.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useFromTokenSufficiency": (()=>useFromTokenSufficiency)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/form/useFieldValues.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokenAddressBalance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useTokenAddressBalance.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/wallet-management/dist/esm/hooks/useAccount.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$unit$2f$parseUnits$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/unit/parseUnits.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/routes/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokenBalance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useTokenBalance.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
const refetchInterval = 30000;
const useFromTokenSufficiency = (route)=>{
    const [fromChainId, fromTokenAddress, fromAmount] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useFieldValues"])('fromChain', 'fromToken', 'fromAmount');
    let chainId = fromChainId;
    let tokenAddress = fromTokenAddress;
    if (route) {
        chainId = route.fromToken.chainId;
        tokenAddress = route.fromToken.address;
    }
    const { token, chain, isLoading: isTokenAddressBalanceLoading } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokenAddressBalance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTokenAddressBalance"])(chainId, tokenAddress);
    const { account } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAccount"])({
        chainType: chain?.chainType
    });
    const { data: insufficientFromToken, isLoading } = useQuery({
        queryKey: [
            'from-token-sufficiency-check',
            account.address,
            chainId,
            tokenAddress,
            route?.id ?? fromAmount
        ],
        queryFn: async ({ queryKey: [, accountAddress] })=>{
            if (!accountAddress || !token) {
                return;
            }
            const parsedFromAmount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$unit$2f$parseUnits$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["parseUnits"])(fromAmount, token.decimals);
            let currentTokenBalance = token.amount ?? 0n;
            if (!route || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$routes$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isRouteDone"])(route)) {
                const insufficientFunds = currentTokenBalance < parsedFromAmount;
                return insufficientFunds;
            }
            const currentAction = route.steps.filter((step)=>!step.execution || step.execution.status !== 'DONE')[0]?.action;
            if (token.chainId === currentAction.fromToken.chainId && token.address === currentAction.fromToken.address && currentTokenBalance > 0) {
                const insufficientFunds = BigInt(route.fromAmount) > currentTokenBalance;
                return insufficientFunds;
            }
            const tokenBalances = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokenBalance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getTokenBalancesWithRetry"])(accountAddress, [
                currentAction.fromToken
            ]);
            currentTokenBalance = tokenBalances?.[0]?.amount ?? 0n;
            const insufficientFunds = BigInt(currentAction.fromAmount) > currentTokenBalance;
            return insufficientFunds;
        },
        enabled: Boolean(account.address && token && !isTokenAddressBalanceLoading),
        refetchInterval,
        staleTime: refetchInterval,
        placeholderData: account.address ? keepPreviousData : undefined
    });
    return {
        insufficientFromToken,
        isLoading
    };
}; //# sourceMappingURL=useFromTokenSufficiency.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useGasSufficiency.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useGasSufficiency": (()=>useGasSufficiency)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useAvailableChains.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/wallet-management/dist/esm/hooks/useAccount.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useIsContractAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useIsContractAddress.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokenBalance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useTokenBalance.js [app-ssr] (ecmascript)");
;
;
;
;
;
const refetchInterval = 30000;
const useGasSufficiency = (route)=>{
    const { getChainById } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useAvailableChains$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAvailableChains"])();
    const { account } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAccount"])({
        chainType: getChainById(route?.fromChainId)?.chainType
    });
    const { isContractAddress } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useIsContractAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useIsContractAddress"])(account.address, route?.fromChainId, account.chainType);
    const { data: insufficientGas, isLoading } = useQuery({
        queryKey: [
            'gas-sufficiency-check',
            account.address,
            route?.id
        ],
        queryFn: async ({ queryKey: [, accountAddress] })=>{
            if (!route) {
                return;
            }
            // We assume that LI.Fuel protocol always refuels the destination chain
            const hasRefuelStep = route.steps.flatMap((step)=>step.includedSteps).some((includedStep)=>includedStep.tool === 'lifuelProtocol');
            const gasCosts = route.steps.filter((step)=>!step.execution || step.execution.status !== 'DONE').reduce((groupedGasCosts, step)=>{
                // We need to avoid destination chain step sufficiency check if we have LI.Fuel protocol sub-step
                const skipDueToRefuel = step.action.fromChainId === route.toChainId && hasRefuelStep;
                if (step.estimate.gasCosts && !skipDueToRefuel) {
                    const { token } = step.estimate.gasCosts[0];
                    const gasCostAmount = step.estimate.gasCosts.reduce((amount, gasCost)=>amount + BigInt(Number(gasCost.amount).toFixed(0)), 0n);
                    groupedGasCosts[token.chainId] = {
                        gasAmount: groupedGasCosts[token.chainId] ? groupedGasCosts[token.chainId].gasAmount + gasCostAmount : gasCostAmount,
                        token
                    };
                }
                // Add fees paid in native tokens to gas sufficiency check (included: false)
                const nonIncludedFeeCosts = step.estimate.feeCosts?.filter((feeCost)=>!feeCost.included);
                if (nonIncludedFeeCosts?.length) {
                    const { token } = nonIncludedFeeCosts[0];
                    const feeCostAmount = nonIncludedFeeCosts.reduce((amount, feeCost)=>amount + BigInt(Number(feeCost.amount).toFixed(0)), 0n);
                    groupedGasCosts[token.chainId] = {
                        gasAmount: groupedGasCosts[token.chainId] ? groupedGasCosts[token.chainId].gasAmount + feeCostAmount : feeCostAmount,
                        token
                    };
                }
                return groupedGasCosts;
            }, {});
            // Check whether we are sending a native token
            // For native tokens we want to check for the total amount, including the network fee
            if (route.fromToken.address === gasCosts[route.fromChainId]?.token.address) {
                gasCosts[route.fromChainId].tokenAmount = gasCosts[route.fromChainId]?.gasAmount + BigInt(route.fromAmount);
            }
            const tokenBalances = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTokenBalance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getTokenBalancesWithRetry"])(accountAddress, Object.values(gasCosts).map((item)=>item.token));
            if (!tokenBalances?.length) {
                return;
            }
            ;
            [
                route.fromChainId,
                route.toChainId
            ].forEach((chainId)=>{
                if (gasCosts[chainId]) {
                    const gasTokenBalance = tokenBalances?.find((t)=>t.chainId === gasCosts[chainId].token.chainId && t.address === gasCosts[chainId].token.address)?.amount ?? 0n;
                    const insufficient = gasTokenBalance <= 0n || gasTokenBalance < gasCosts[chainId].gasAmount || gasTokenBalance < (gasCosts[chainId].tokenAmount ?? 0n);
                    const insufficientAmount = insufficient ? gasCosts[chainId].tokenAmount ? gasCosts[chainId].tokenAmount - gasTokenBalance : gasCosts[chainId].gasAmount - gasTokenBalance : undefined;
                    gasCosts[chainId] = {
                        ...gasCosts[chainId],
                        insufficient,
                        insufficientAmount,
                        chain: insufficient ? getChainById(chainId) : undefined
                    };
                }
            });
            const gasCostResult = Object.values(gasCosts).filter((gasCost)=>gasCost.insufficient);
            return gasCostResult;
        },
        enabled: Boolean(!isContractAddress && account.address && route),
        refetchInterval,
        staleTime: refetchInterval
    });
    return {
        insufficientGas,
        isLoading
    };
}; //# sourceMappingURL=useGasSufficiency.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useLanguages.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useLanguages": (()=>useLanguages)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$i18next$2f$dist$2f$es$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/react-i18next/dist/es/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$i18next$2f$dist$2f$es$2f$useTranslation$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-i18next/dist/es/useTranslation.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/providers/WidgetProvider/WidgetProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettings$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/settings/useSettings.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettingsActions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/settings/useSettingsActions.js [app-ssr] (ecmascript)");
;
;
;
;
const useLanguages = ()=>{
    const { t, i18n } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$i18next$2f$dist$2f$es$2f$useTranslation$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTranslation"])();
    const { languages } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$providers$2f$WidgetProvider$2f$WidgetProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useWidgetConfig"])();
    const { language } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettings$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSettings"])([
        'language'
    ]);
    const { setValue } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$settings$2f$useSettingsActions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSettingsActions"])();
    const sortedLanguages = Object.keys(i18n.store.data).sort();
    const selectedLanguageCode = sortedLanguages.includes(language || i18n.resolvedLanguage || '') ? language || i18n.resolvedLanguage : languages?.default || languages?.allow?.[0];
    return {
        availableLanguages: sortedLanguages,
        selectedLanguageCode: selectedLanguageCode,
        selectedLanguageDisplayName: t('language.name', {
            lng: selectedLanguageCode
        }),
        setLanguageWithCode: (code)=>{
            setValue('language', code);
            i18n.changeLanguage(code);
        }
    };
}; //# sourceMappingURL=useLanguages.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useScrollableContainer.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useGetScrollableContainer": (()=>useGetScrollableContainer),
    "useScrollableContainer": (()=>useScrollableContainer),
    "useScrollableOverflowHidden": (()=>useScrollableOverflowHidden)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useDefaultElementId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useDefaultElementId.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$elements$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/utils/elements.js [app-ssr] (ecmascript)");
;
;
;
const useGetScrollableContainer = ()=>{
    const elementId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useDefaultElementId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultElementId"])();
    const getContainer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$elements$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getScrollableContainer"])(elementId), [
        elementId
    ]);
    return getContainer;
};
const useScrollableContainer = (elementId)=>{
    const [containerElement, setContainerElement] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$elements$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getScrollableContainer"])(elementId));
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useLayoutEffect"])(()=>{
        if (!containerElement) {
            setContainerElement((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$elements$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getScrollableContainer"])(elementId));
        }
    }, [
        containerElement,
        elementId
    ]);
    return containerElement;
};
const useScrollableOverflowHidden = ()=>{
    const elementId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useDefaultElementId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultElementId"])();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useLayoutEffect"])(()=>{
        const element = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$elements$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getScrollableContainer"])(elementId);
        if (element) {
            element.style.overflowY = 'hidden';
        }
        return ()=>{
            if (element) {
                element.style.overflowY = 'auto';
            }
        };
    }, [
        elementId
    ]);
}; //# sourceMappingURL=useScrollableContainer.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useSetContentHeight.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useSetContentHeight": (()=>useSetContentHeight)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useDefaultElementId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useDefaultElementId.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$elements$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/utils/elements.js [app-ssr] (ecmascript)");
;
;
;
const useSetContentHeight = (ref, dependency)=>{
    const elementId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useDefaultElementId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultElementId"])();
    // biome-ignore lint/correctness/useExhaustiveDependencies: we use dependency to refresh height
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useLayoutEffect"])(()=>{
        const relativeContainer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$utils$2f$elements$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getRelativeContainer"])(elementId);
        if (!relativeContainer || !ref.current || ref.current?.clientHeight <= relativeContainer?.clientHeight) {
            return;
        }
        relativeContainer.style.minHeight = `${ref.current.clientHeight}px`;
        return ()=>{
            relativeContainer.style.removeProperty('min-height');
        };
    }, [
        elementId,
        ref,
        dependency
    ]);
}; //# sourceMappingURL=useSetContentHeight.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useTransactionHistory.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useTransactionHistory": (()=>useTransactionHistory)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/wallet-management/dist/esm/hooks/useAccount.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/services/api.js [app-ssr] (ecmascript)");
;
;
;
const useTransactionHistory = ()=>{
    const { accounts } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAccount"])();
    const { data, isLoading } = useQueries({
        queries: accounts.map((account)=>({
                queryKey: [
                    'transaction-history',
                    account.address
                ],
                queryFn: async ({ queryKey: [, accountAddress], signal })=>{
                    if (!accountAddress) {
                        return [];
                    }
                    const date = new Date();
                    date.setFullYear(date.getFullYear() - 10);
                    const response = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getTransactionHistory"])({
                        wallet: accountAddress,
                        fromTimestamp: Math.floor(date.getTime() / 1000),
                        toTimestamp: Math.floor(Date.now() / 1000)
                    }, {
                        signal
                    });
                    return response.transfers;
                },
                refetchInterval: 300000,
                enabled: Boolean(account.address)
            })),
        combine: (results)=>{
            const uniqueTransactions = new Map();
            results.forEach((result)=>{
                if (result.data) {
                    result.data.forEach((transaction)=>{
                        if (transaction?.transactionId && transaction?.receiving?.chainId && transaction?.sending.chainId) {
                            uniqueTransactions.set(transaction.transactionId, transaction);
                        }
                    });
                }
            });
            const data = Array.from(uniqueTransactions.values()).sort((a, b)=>{
                return (b?.sending?.timestamp ?? 0) - (a?.sending?.timestamp ?? 0);
            });
            return {
                data: data,
                isLoading: results.some((result)=>result.isLoading)
            };
        }
    });
    return {
        data,
        isLoading
    };
}; //# sourceMappingURL=useTransactionHistory.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useTransactionDetails.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useTransactionDetails": (()=>useTransactionDetails)
});
(()=>{
    const e = new Error("Cannot find module '@tanstack/react-query'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/wallet-management/dist/esm/hooks/useAccount.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/services/api.js [app-ssr] (ecmascript)");
;
;
;
const useTransactionDetails = (transactionHash)=>{
    const { account, accounts } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$wallet$2d$management$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useAccount"])();
    const queryClient = useQueryClient();
    const { data, isLoading } = useQuery({
        queryKey: [
            'transaction-history',
            transactionHash
        ],
        queryFn: async ({ queryKey: [, transactionHash], signal })=>{
            if (transactionHash) {
                for (const account of accounts){
                    const cachedHistory = queryClient.getQueryData([
                        'transaction-history',
                        account.address
                    ]);
                    const transaction = cachedHistory?.find((t)=>t.sending.txHash === transactionHash);
                    if (transaction) {
                        return transaction;
                    }
                }
                const transaction = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$services$2f$api$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStatus"])({
                    txHash: transactionHash
                }, {
                    signal
                });
                const fromAddress = transaction?.fromAddress;
                if (fromAddress) {
                    queryClient.setQueryData([
                        'transaction-history',
                        fromAddress
                    ], (data)=>{
                        return [
                            ...data,
                            transaction
                        ];
                    });
                }
                return transaction;
            }
        },
        refetchInterval: 300000,
        enabled: account.isConnected && Boolean(transactionHash),
        initialData: ()=>{
            for (const account of accounts){
                const transaction = queryClient.getQueryData([
                    'transaction-history',
                    account.address
                ])?.find((t)=>t.sending.txHash === transactionHash);
                if (transaction) {
                    return transaction;
                }
            }
        },
        placeholderData: keepPreviousData
    });
    return {
        transaction: data,
        isLoading
    };
}; //# sourceMappingURL=useTransactionDetails.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useAddressActivity.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useAddressActivity": (()=>useAddressActivity)
});
(()=>{
    const e = new Error("Cannot find module 'wagmi'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/stores/form/useFieldValues.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/address/isAddress.js [app-ssr] (ecmascript)");
;
;
;
const useAddressActivity = (chainId)=>{
    const [toAddress, toChainId] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$stores$2f$form$2f$useFieldValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useFieldValues"])('toAddress', 'toChain');
    const destinationChainId = chainId ?? toChainId;
    const { data: transactionCount, isLoading, isFetched, error } = useTransactionCount({
        address: toAddress,
        chainId: destinationChainId,
        query: {
            enabled: Boolean(toAddress && destinationChainId && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isAddress"])(toAddress)),
            refetchInterval: 300000,
            staleTime: 300000
        }
    });
    return {
        toAddress,
        hasActivity: Boolean(transactionCount && transactionCount > 0),
        isLoading,
        isFetched: isFetched && !error
    };
}; //# sourceMappingURL=useAddressActivity.js.map
}}),
"[project]/node_modules/@lifi/widget/dist/esm/hooks/useInitializer.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useInitializer": (()=>useInitializer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTools$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/hooks/useTools.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/sdk/src/_esm/helpers.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$config$2f$version$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@lifi/widget/dist/esm/config/version.js [app-ssr] (ecmascript)");
;
;
;
;
let checkedPackageUpdates = false;
const useInitializer = ()=>{
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$hooks$2f$useTools$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTools"])();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (!checkedPackageUpdates && ("TURBOPACK compile-time value", "development") === 'development') {
            checkedPackageUpdates = true;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$sdk$2f$src$2f$_esm$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["checkPackageUpdates"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$config$2f$version$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["name"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$lifi$2f$widget$2f$dist$2f$esm$2f$config$2f$version$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["version"]);
        }
    }, []);
}; //# sourceMappingURL=useInitializer.js.map
}}),

};

//# sourceMappingURL=node_modules_%40lifi_widget_dist_esm_hooks_8982f0._.js.map